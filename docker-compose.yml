services:
  traefik:
    image: traefik:v3.5
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--api.dashboard=true" # Habilitar el dashboard de Traefik
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - gateway-network
    labels:
      - "traefik.enable=true"
      # Router para el dashboard en ops.localhost/dashboard/
      - "traefik.http.routers.traefik.rule=Host(`ops.localhost`) && PathPrefix(`/dashboard`)"
      - "traefik.http.routers.traefik.entrypoints=web"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.middlewares.strip-dashboard.stripprefix.prefixes=/dashboard"
      - "traefik.http.routers.traefik.middlewares=strip-dashboard"

  neo4j:
    image: neo4j:5.22.0-community
    restart: always
    environment:
      NEO4J_AUTH: "${NEO4J_USER}/${NEO4J_PASSWORD}"
    volumes:
      - neo4j_data:/data
      - ./import:/import
    networks:
      - gateway-network

  backend:
    build: ./backend
    restart: always
    depends_on:
      - neo4j
    env_file:
      - .env
    networks:
      - gateway-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`api.localhost`)" # Router para ela api en api.localhost
      - "traefik.http.routers.backend.entrypoints=web"
      - "traefik.http.services.backend.loadbalancer.server.port=3000"

volumes:
  neo4j_data:
    driver: local

networks:
  gateway-network:
    driver: bridge
